// Generated by Haxe 5.0.0-alpha.1+5e4e368
(function ($global) { "use strict";
function $extend(from, fields) {
	var proto = Object.create(from);
	for (var name in fields) proto[name] = fields[name];
	if( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;
	return proto;
}
var HxCoro_$delay = function(completion) {
	this._hx_completion = completion;
	this._hx_context = completion._hx_context;
	this._hx_state = 0;
	this._hx_result = null;
	this._hx_error = null;
};
HxCoro_$delay.__name__ = "HxCoro_delay";
HxCoro_$delay.prototype = {
	resume: function(result,error) {
		var _gthis = this;
		this._hx_result = result;
		this._hx_error = error;
		this._hx_context.scheduler.schedule(function() {
			try {
				var result = Main.delay(0,_gthis);
				if(result == coro_Primitive.suspended) {
					return;
				}
				_gthis._hx_completion.resume(result,null);
			} catch( _g ) {
				var _g1 = haxe_Exception.caught(_g);
				_gthis._hx_completion.resume(null,_g1);
			}
		});
	}
};
var HxCoro_$getNumber = function(completion) {
	this._hx_completion = completion;
	this._hx_context = completion._hx_context;
	this._hx_state = 0;
	this._hx_result = null;
	this._hx_error = null;
};
HxCoro_$getNumber.__name__ = "HxCoro_getNumber";
HxCoro_$getNumber.prototype = {
	resume: function(result,error) {
		var _gthis = this;
		this._hx_result = result;
		this._hx_error = error;
		this._hx_context.scheduler.schedule(function() {
			try {
				var result = Main.getNumber(_gthis);
				if(result == coro_Primitive.suspended) {
					return;
				}
				_gthis._hx_completion.resume(result,null);
			} catch( _g ) {
				var _g1 = haxe_Exception.caught(_g);
				_gthis._hx_completion.resume(null,_g1);
			}
		});
	}
};
var HxCoro_$someAsync = function(completion) {
	this._hx_completion = completion;
	this._hx_context = completion._hx_context;
	this._hx_state = 0;
	this._hx_result = null;
	this._hx_error = null;
};
HxCoro_$someAsync.__name__ = "HxCoro_someAsync";
HxCoro_$someAsync.prototype = {
	resume: function(result,error) {
		var _gthis = this;
		this._hx_result = result;
		this._hx_error = error;
		this._hx_context.scheduler.schedule(function() {
			try {
				var result = Main.someAsync(_gthis);
				if(result == coro_Primitive.suspended) {
					return;
				}
				_gthis._hx_completion.resume(result,null);
			} catch( _g ) {
				var _g1 = haxe_Exception.caught(_g);
				_gthis._hx_completion.resume(null,_g1);
			}
		});
	}
};
var HxCoro_$write = function(completion) {
	this._hx_completion = completion;
	this._hx_context = completion._hx_context;
	this._hx_state = 0;
	this._hx_result = null;
	this._hx_error = null;
};
HxCoro_$write.__name__ = "HxCoro_write";
HxCoro_$write.prototype = {
	resume: function(result,error) {
		var _gthis = this;
		this._hx_result = result;
		this._hx_error = error;
		this._hx_context.scheduler.schedule(function() {
			try {
				var result = Main.write(null,_gthis);
				if(result == coro_Primitive.suspended) {
					return;
				}
				_gthis._hx_completion.resume(result,null);
			} catch( _g ) {
				var _g1 = haxe_Exception.caught(_g);
				_gthis._hx_completion.resume(null,_g1);
			}
		});
	}
};
var HxOverrides = function() { };
HxOverrides.__name__ = "HxOverrides";
HxOverrides.remove = function(a,obj) {
	var i = a.indexOf(obj);
	if(i == -1) {
		return false;
	}
	a.splice(i,1);
	return true;
};
HxOverrides.now = function() {
	return Date.now();
};
var Main = function() { };
Main.__name__ = "Main";
Main.write = function(string,_hx_completion) {
	var _hx_continuation = ((_hx_completion) instanceof HxCoro_$write) ? _hx_completion : new HxCoro_$write(_hx_completion);
	var tmp0;
	if(_hx_continuation._hx_error != null) {
		throw haxe_Exception.thrown(_hx_continuation._hx_error);
	}
	while(true) switch(_hx_continuation._hx_state) {
	case 0:
		_hx_continuation._hx_state = 1;
		var _hx_tmp = coro_Coroutine.suspend(function(cont) {
			process.stdout.write(string + "\n",null,function() {
				cont.resume(0,null);
			});
		},_hx_continuation);
		if(_hx_tmp == coro_Primitive.suspended) {
			return coro_Primitive.suspended;
		}
		_hx_continuation._hx_result = _hx_tmp;
		break;
	case 1:
		tmp0 = _hx_continuation._hx_result;
		_hx_continuation._hx_state = -1;
		return tmp0;
	default:
		throw new haxe_Exception("Invalid state");
	}
};
Main.delay = function(ms,_hx_completion) {
	var _hx_continuation = ((_hx_completion) instanceof HxCoro_$delay) ? _hx_completion : new HxCoro_$delay(_hx_completion);
	var tmp0;
	if(_hx_continuation._hx_error != null) {
		throw haxe_Exception.thrown(_hx_continuation._hx_error);
	}
	while(true) switch(_hx_continuation._hx_state) {
	case 0:
		_hx_continuation._hx_state = 1;
		var _hx_tmp = coro_Coroutine.suspend(function(cont) {
			var handle = null;
			var registration = null;
			handle = global.setTimeout(function() {
				coro_Registration.unregister(registration);
				cont.resume(null,null);
			},ms);
			registration = cont._hx_context.token.register(function() {
				global.clearInterval(handle);
				cont.resume(null,new haxe_exceptions_CancellationException("delay has been cancelled"));
			});
		},_hx_continuation);
		if(_hx_tmp == coro_Primitive.suspended) {
			return coro_Primitive.suspended;
		}
		_hx_continuation._hx_result = _hx_tmp;
		break;
	case 1:
		tmp0 = _hx_continuation._hx_result;
		_hx_continuation._hx_state = -1;
		return tmp0;
	default:
		throw new haxe_Exception("Invalid state");
	}
};
Main.getNumber = function(_hx_completion) {
	var _hx_continuation = ((_hx_completion) instanceof HxCoro_$getNumber) ? _hx_completion : new HxCoro_$getNumber(_hx_completion);
	var tmp0;
	if(_hx_continuation._hx_error != null) {
		throw haxe_Exception.thrown(_hx_continuation._hx_error);
	}
	while(true) switch(_hx_continuation._hx_state) {
	case 0:
		_hx_continuation._hx_state = 1;
		var _hx_tmp = coro_Coroutine.suspend(function(cont) {
			cont.resume(++Main.nextNumber,null);
		},_hx_continuation);
		if(_hx_tmp == coro_Primitive.suspended) {
			return coro_Primitive.suspended;
		}
		_hx_continuation._hx_result = _hx_tmp;
		break;
	case 1:
		tmp0 = _hx_continuation._hx_result;
		_hx_continuation._hx_state = -1;
		return tmp0;
	default:
		throw new haxe_Exception("Invalid state");
	}
};
Main.someAsync = function(_hx_completion) {
	var _hx_continuation = ((_hx_completion) instanceof HxCoro_$someAsync) ? _hx_completion : new HxCoro_$someAsync(_hx_completion);
	var tmp1;
	var tmp4;
	if(_hx_continuation._hx_error != null) {
		throw haxe_Exception.thrown(_hx_continuation._hx_error);
	}
	while(true) switch(_hx_continuation._hx_state) {
	case 0:
		_hx_continuation._hx_state = 1;
		var _hx_tmp = Main.write("hi",_hx_continuation);
		if(_hx_tmp == coro_Primitive.suspended) {
			return coro_Primitive.suspended;
		}
		_hx_continuation._hx_result = _hx_tmp;
		break;
	case 1:
		_hx_continuation._hx_state = 2;
		break;
	case 2:
		_hx_continuation._hx_state = 3;
		var _hx_tmp1 = Main.getNumber(_hx_continuation);
		if(_hx_tmp1 == coro_Primitive.suspended) {
			return coro_Primitive.suspended;
		}
		_hx_continuation._hx_result = _hx_tmp1;
		break;
	case 3:
		tmp1 = _hx_continuation._hx_result;
		if(tmp1 < 10) {
			_hx_continuation._hx_state = 4;
		} else {
			_hx_continuation._hx_state = 9;
		}
		break;
	case 4:
		_hx_continuation._hx_state = 5;
		var _hx_tmp2 = Main.write("wait for it...",_hx_continuation);
		if(_hx_tmp2 == coro_Primitive.suspended) {
			return coro_Primitive.suspended;
		}
		_hx_continuation._hx_result = _hx_tmp2;
		break;
	case 5:
		_hx_continuation._hx_state = 6;
		var _hx_tmp3 = Main.delay(1000,_hx_continuation);
		if(_hx_tmp3 == coro_Primitive.suspended) {
			return coro_Primitive.suspended;
		}
		_hx_continuation._hx_result = _hx_tmp3;
		break;
	case 6:
		_hx_continuation._hx_state = 7;
		var _hx_tmp4 = Main.getNumber(_hx_continuation);
		if(_hx_tmp4 == coro_Primitive.suspended) {
			return coro_Primitive.suspended;
		}
		_hx_continuation._hx_result = _hx_tmp4;
		break;
	case 7:
		tmp4 = _hx_continuation._hx_result;
		_hx_continuation._hx_state = 8;
		var _hx_tmp5 = Main.write(Std.string(tmp4),_hx_continuation);
		if(_hx_tmp5 == coro_Primitive.suspended) {
			return coro_Primitive.suspended;
		}
		_hx_continuation._hx_result = _hx_tmp5;
		break;
	case 8:
		_hx_continuation._hx_state = 2;
		break;
	case 9:
		_hx_continuation._hx_state = -1;
		throw new haxe_Exception("bye");
	default:
		throw new haxe_Exception("Invalid state");
	}
};
Main.main = function() {
	Main.events = new coro_EventLoop();
	Main.someAsync(new coro_BlockingContinuation(new coro_schedulers_NodeScheduler(),null));
};
Math.__name__ = "Math";
var Std = function() { };
Std.__name__ = "Std";
Std.string = function(s) {
	return js_Boot.__string_rec(s,"");
};
var coro_BlockingContinuation = function(scheduler,events) {
	this.events = events;
	this.source = new coro_CancellationTokenSource();
	this._hx_context = new coro_CoroutineContext(scheduler,this.source.token);
	this.running = true;
	this.result = 0;
	this.error = null;
};
coro_BlockingContinuation.__name__ = "coro.BlockingContinuation";
coro_BlockingContinuation.prototype = {
	resume: function(result,error) {
		this.running = false;
		this.result = result;
		this.error = error;
		if(this.error != null) {
			throw haxe_Exception.thrown(this.error);
		}
		console.log("src/coro/BlockingContinuation.hx:35:",this.result);
	}
};
var coro_CancellationToken = function(source) {
	this.source = source;
};
coro_CancellationToken.__name__ = "coro.CancellationToken";
coro_CancellationToken.prototype = {
	register: function(func) {
		return this.source.register(func);
	}
};
var coro_Registration = {};
coro_Registration._new = function(func) {
	return func;
};
coro_Registration.unregister = function(this1) {
	this1();
};
var coro_CancellationTokenSource = function() {
	this.token = new coro_CancellationToken(this);
	this.cancelled = false;
	this.registrations = [];
};
coro_CancellationTokenSource.__name__ = "coro.CancellationTokenSource";
coro_CancellationTokenSource.prototype = {
	get_isCancellationRequested: function() {
		return this.cancelled;
	}
	,register: function(func) {
		var _gthis = this;
		if(this.get_isCancellationRequested()) {
			throw new haxe_exceptions_CancellationException("Cancellation token has already been cancelled");
		}
		this.registrations.push(func);
		return coro_Registration._new(function() {
			HxOverrides.remove(_gthis.registrations,func);
		});
	}
};
var coro_Coroutine = function() { };
coro_Coroutine.__name__ = "coro.Coroutine";
coro_Coroutine.suspend = function(func,_hx_completion) {
	var safe = new coro__$Coroutine_SafeContinuation(_hx_completion);
	func(safe);
	return safe.getOrThrow();
};
var coro__$Coroutine_SafeContinuation = function(completion) {
	this._hx_completion = completion;
	this._hx_context = this._hx_completion._hx_context;
	this._hx_result = null;
	this._hx_error = null;
	this.assigned = false;
};
coro__$Coroutine_SafeContinuation.__name__ = "coro._Coroutine.SafeContinuation";
coro__$Coroutine_SafeContinuation.prototype = {
	resume: function(result,error) {
		var _gthis = this;
		this._hx_context.scheduler.schedule(function() {
			if(_gthis.assigned) {
				_gthis._hx_completion.resume(result,error);
			} else {
				_gthis.assigned = true;
				_gthis._hx_result = result;
				_gthis._hx_error = error;
			}
		});
	}
	,getOrThrow: function() {
		if(this.assigned) {
			if(this._hx_error != null) {
				var tmp = this._hx_error;
				throw haxe_Exception.thrown(tmp);
			}
			var tmp = this._hx_result;
			return tmp;
		}
		this.assigned = true;
		return coro_Primitive.suspended;
	}
};
var coro_CoroutineContext = function(scheduler,token) {
	this.scheduler = scheduler;
	this.token = token;
};
coro_CoroutineContext.__name__ = "coro.CoroutineContext";
var coro_EventLoop = function() {
	this.isMainThread = !coro_EventLoop.CREATED;
	coro_EventLoop.CREATED = true;
};
coro_EventLoop.__name__ = "coro.EventLoop";
var coro_Primitive = function() {
};
coro_Primitive.__name__ = "coro.Primitive";
var coro_schedulers_NodeScheduler = function() {
};
coro_schedulers_NodeScheduler.__name__ = "coro.schedulers.NodeScheduler";
coro_schedulers_NodeScheduler.prototype = {
	schedule: function(func) {
		global.setImmediate(func);
	}
};
var haxe_EntryPoint = function() { };
haxe_EntryPoint.__name__ = "haxe.EntryPoint";
haxe_EntryPoint.processEvents = function() {
	while(true) {
		var f = haxe_EntryPoint.pending.shift();
		if(f == null) {
			break;
		}
		f();
	}
	var time = haxe_MainLoop.tick();
	if(!haxe_MainLoop.hasEvents() && haxe_EntryPoint.threadCount == 0) {
		return -1;
	}
	return time;
};
haxe_EntryPoint.run = function() {
	var nextTick = haxe_EntryPoint.processEvents();
	if(nextTick >= 0) {
		setTimeout(haxe_EntryPoint.run,nextTick * 1000);
	}
};
var haxe_Exception = function(message,previous,native) {
	Error.call(this,message);
	this.message = message;
	this.__previousException = previous;
	this.__nativeException = native != null ? native : this;
};
haxe_Exception.__name__ = "haxe.Exception";
haxe_Exception.caught = function(value) {
	if(((value) instanceof haxe_Exception)) {
		return value;
	} else if(((value) instanceof Error)) {
		return new haxe_Exception(value.message,null,value);
	} else {
		return new haxe_ValueException(value,null,value);
	}
};
haxe_Exception.thrown = function(value) {
	if(((value) instanceof haxe_Exception)) {
		return value.get_native();
	} else if(((value) instanceof Error)) {
		return value;
	} else {
		var e = new haxe_ValueException(value);
		return e;
	}
};
haxe_Exception.__super__ = Error;
haxe_Exception.prototype = $extend(Error.prototype,{
	toString: function() {
		return this.get_message();
	}
	,get_message: function() {
		return this.message;
	}
	,get_native: function() {
		return this.__nativeException;
	}
});
var haxe_MainEvent = function(f,p) {
	this.isBlocking = true;
	this.f = f;
	this.priority = p;
	this.nextRun = -Infinity;
};
haxe_MainEvent.__name__ = "haxe.MainEvent";
var haxe_MainLoop = function() { };
haxe_MainLoop.__name__ = "haxe.MainLoop";
haxe_MainLoop.hasEvents = function() {
	var p = haxe_MainLoop.pending;
	while(p != null) {
		if(p.isBlocking) {
			return true;
		}
		p = p.next;
	}
	return false;
};
haxe_MainLoop.sortEvents = function() {
	var list = haxe_MainLoop.pending;
	if(list == null) {
		return;
	}
	var insize = 1;
	var nmerges;
	var psize = 0;
	var qsize = 0;
	var p;
	var q;
	var e;
	var tail;
	while(true) {
		p = list;
		list = null;
		tail = null;
		nmerges = 0;
		while(p != null) {
			++nmerges;
			q = p;
			psize = 0;
			var _g = 0;
			var _g1 = insize;
			while(_g < _g1) {
				++_g;
				++psize;
				q = q.next;
				if(q == null) {
					break;
				}
			}
			qsize = insize;
			while(psize > 0 || qsize > 0 && q != null) {
				if(psize == 0) {
					e = q;
					q = q.next;
					--qsize;
				} else if(qsize == 0 || q == null || (p.priority > q.priority || p.priority == q.priority && p.nextRun <= q.nextRun)) {
					e = p;
					p = p.next;
					--psize;
				} else {
					e = q;
					q = q.next;
					--qsize;
				}
				if(tail != null) {
					tail.next = e;
				} else {
					list = e;
				}
				e.prev = tail;
				tail = e;
			}
			p = q;
		}
		tail.next = null;
		if(nmerges <= 1) {
			break;
		}
		insize *= 2;
	}
	list.prev = null;
	haxe_MainLoop.pending = list;
};
haxe_MainLoop.tick = function() {
	haxe_MainLoop.sortEvents();
	var e = haxe_MainLoop.pending;
	var hrtime = process.hrtime();
	var now = hrtime[0] + hrtime[1] / 1e9;
	var wait = 1e9;
	while(e != null) {
		var next = e.next;
		var wt = e.nextRun - now;
		if(wt <= 0) {
			wait = 0;
			if(e.f != null) {
				e.f();
			}
		} else if(wait > wt) {
			wait = wt;
		}
		e = next;
	}
	return wait;
};
var haxe_ValueException = function(value,previous,native) {
	haxe_Exception.call(this,String(value),previous,native);
	this.value = value;
};
haxe_ValueException.__name__ = "haxe.ValueException";
haxe_ValueException.__super__ = haxe_Exception;
haxe_ValueException.prototype = $extend(haxe_Exception.prototype,{
});
var haxe_exceptions_CancellationException = function(message) {
	haxe_Exception.call(this,message);
};
haxe_exceptions_CancellationException.__name__ = "haxe.exceptions.CancellationException";
haxe_exceptions_CancellationException.__super__ = haxe_Exception;
haxe_exceptions_CancellationException.prototype = $extend(haxe_Exception.prototype,{
});
var haxe_iterators_ArrayIterator = function(array) {
	this.current = 0;
	this.array = array;
};
haxe_iterators_ArrayIterator.__name__ = "haxe.iterators.ArrayIterator";
haxe_iterators_ArrayIterator.prototype = {
	hasNext: function() {
		return this.current < this.array.length;
	}
	,next: function() {
		return this.array[this.current++];
	}
};
var js_Boot = function() { };
js_Boot.__name__ = "js.Boot";
js_Boot.__string_rec = function(o,s) {
	if(o == null) {
		return "null";
	}
	if(s.length >= 5) {
		return "<...>";
	}
	var t = typeof(o);
	if(t == "function" && (o.__name__ || o.__ename__)) {
		t = "object";
	}
	switch(t) {
	case "function":
		return "<function>";
	case "object":
		if(((o) instanceof Array)) {
			var str = "[";
			s += "\t";
			var _g = 0;
			var _g1 = o.length;
			while(_g < _g1) {
				var i = _g++;
				str += (i > 0 ? "," : "") + js_Boot.__string_rec(o[i],s);
			}
			str += "]";
			return str;
		}
		var tostr;
		try {
			tostr = o.toString;
		} catch( _g ) {
			return "???";
		}
		if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
			var s2 = o.toString();
			if(s2 != "[object Object]") {
				return s2;
			}
		}
		var str = "{\n";
		s += "\t";
		var hasp = o.hasOwnProperty != null;
		var k = null;
		for( k in o ) {
		if(hasp && !o.hasOwnProperty(k)) {
			continue;
		}
		if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
			continue;
		}
		if(str.length != 2) {
			str += ", \n";
		}
		str += s + k + " : " + js_Boot.__string_rec(o[k],s);
		}
		s = s.substring(1);
		str += "\n" + s + "}";
		return str;
	case "string":
		return o;
	default:
		return String(o);
	}
};
if(typeof(performance) != "undefined" ? typeof(performance.now) == "function" : false) {
	HxOverrides.now = performance.now.bind(performance);
}
String.__name__ = "String";
Array.__name__ = "Array";
js_Boot.__toStr = ({ }).toString;
Main.nextNumber = 0;
coro_Primitive.suspended = new coro_Primitive();
haxe_EntryPoint.pending = [];
haxe_EntryPoint.threadCount = 0;
{
	Main.main();
	haxe_EntryPoint.run();
}
})({});

//# sourceMappingURL=main.js.map